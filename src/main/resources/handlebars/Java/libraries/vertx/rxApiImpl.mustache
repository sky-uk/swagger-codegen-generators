package {{package}}.rxjava;

{{#imports}}import {{import}};
{{/imports}}

import java.util.*;

import rx.Single;
import io.vertx.core.AsyncResult;
import io.vertx.core.Handler;

{{>generatedAnnotation}}
{{#operations}}
public class {{classname}} {

	private final {{package}}.{{classname}} delegate;

	public {{classname}}({{package}}.{{classname}} delegate) {
	    this.delegate = delegate;
    }

	public {{package}}.{{classname}} getDelegate() {
	    return delegate;
	}

    {{#operation}}
    {{#contents}}
    /**
     * {{summary}}
     * {{notes}}
     {{#parameters}}
     * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}
     {{/parameters}}
     * @param resultHandler Asynchronous result handler
     */
    public void {{operationId}}({{#parameters}}{{{dataType}}} {{paramName}}, {{/parameters}}Handler<AsyncResult<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}>> resultHandler) {
        delegate.{{operationId}}({{#parameters}}{{paramName}}, {{/parameters}}resultHandler);
    }

    /**
     * {{summary}}
     * {{notes}}
     {{#parameters}}
     * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}
     {{/parameters}}
     * @return Asynchronous result handler (RxJava Single)
     */
    public Single<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> rx{{operationIdCamelCase}}({{#parameters}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/parameters}}) {
        return Single.create(new io.vertx.rx.java.SingleOnSubscribeAdapter<>(fut -> {
            delegate.{{operationId}}({{#parameters}}{{paramName}}, {{/parameters}}fut);
        }));
    }
    {{/contents}}
    {{/operation}}

    public static {{classname}} newInstance({{package}}.{{classname}} arg) {
        return arg != null ? new {{classname}}(arg) : null;
    }
}
{{/operations}}
